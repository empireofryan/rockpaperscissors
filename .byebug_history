continue
next
play_game[:winner_id] == :player_two ? self.game.player_two_id : self.game.player_one_id
next
play_game[:winner_id]
continue
play_game[:winner_id]
continue
UPDATE "choices" SET "player_one_choice" = $1, "updated_at" = $2 WHERE "choices"."id" = $3  [["player_one_choice", "paper"], ["updated_at", 2016-02-26 02:41:57 UTC], ["id", 162]]continue
continue
next
result
next
play_game
next
!player_two_choice.nil?
!player_one_choice.nil?
continue
player_two_choice.nil?
player_two_choice
player_one_choice
continue
exception
next
@choice.valid?
next
params[:option]
continue
quit
CHOICES[player_one_throw.to_sym]
CHOICES[player_one_throw]
player_two_throw
player_one_throw
CHOICES
quit
set_winner_id_and_resultquit
n
rockpaperscissors('rock', 'scissors')
rockpaperscissors('rock', 'scissors'
self.rockpaperscissors
n
self.choice
self.chocie
.choice
Choice.choice
CHoice.choice
Choice.last
n
quit
n
rails s
end
n
c
@choice
@choice.save
@choice
n
@game.choices.where(winner_id: nil, result: nil).last
c
@choice
@choice.save
@choice
n
@choice
n
@choice
n
@game.choices
@game.choices.where(winner_id: nil, result: nil).last
c
params
n
@game.choices
@game.choices.where(winner_id: nil, result: nil).last
c
@choice
@choice.save
n
@choice
n
@game.choices.where(winner_id: nil, result: nil).last
c
@game.choices.where(winner_id: nil, result: nil).last
@choice
n
@choice
n
@choice
n
@game.choices.where(winner_id: nil, result: nil).last
c
@choice.result
c
@choice.result
c
@choice.winner
@choice.result
c
@game
c
n
s
n
@choice
n
@player
n
params
c
@game
@gmae
n
c
n
@player_two
@player_one
n
params
exit
params
